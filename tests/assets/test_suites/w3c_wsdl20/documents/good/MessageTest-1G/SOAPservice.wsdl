<!-- https://dev.w3.org/2002/ws/desc/test-suite/documents/good/MessageTest-1G/SOAPservice.wsdl -->
<!-- Copyright Â© 2007-03-23 05:51 - W3C, (MIT, ERCIM, Keio). All Rights Reserved. http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231 -->
<description xmlns="http://www.w3.org/ns/wsdl"
    targetNamespace="http://example.org/message-test" xmlns:tns="http://example.org/message-test"
    xmlns:wsoap="http://www.w3.org/ns/wsdl/soap" xmlns:wsdlx="http://www.w3.org/ns/wsdl-extensions"
    xmlns:whttp="http://www.w3.org/ns/wsdl/http" xmlns:xsmt="http://example.org/message-test/xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://www.w3.org/2003/05/soap-envelope">

  <documentation><![CDATA[
    This test is part of a set representing functionality manifesting changes in the
    wire format of messages.  This testcase specificially exercises the SOAP Binding,
    including HTTP extensions to the SOAP Binding.  SOAP Response MEP and safety
    testing has been moved to MessageTest-4G to work around logging issues.  SOAP Headers
    have been moved to MessageTest-5G.
    
    When running a test pass against this WSDL, each endpoint should be invoked in order, and 
    each operation within the interface bound by that binding should be invoked in the order 
    it appears in the interface, extended interfaces first.  Thus the order will be:
        EchoString - simple string echoing in-out operation.
        EchoStringFault - simple sting echoing in-out operation, but defined to return a fault.
        EchoInt - simple int echoing in-out operation.
          The value of the <int> element must be "42".
        EchoIntSimpleFault - simple int echoing in-out operation, but defined to return a simple fault.
        EchoIntFault - simple int echoing in-out operation, but define to return a complex fault structure.
        Send - one-way operation sending arbitrary XML payload.
        GuaranteedFault - robust-one-way operation, defined to return a simple fault.
  
    This test scenario defines the following extensions, which are necessary to the test framework
    to verify facilities not testable without them.
    - A test SOAP module.  Identified by the URI http://www.w3.org/2002/ws/desc/6/10/test-module, 
      this module simply inserts an empty header in messages where the module is in effect. 
      The header is of the form <module-test xmlns="http://www.w3.org/2002/ws/desc/6/10/test-module"/>.
  ]]></documentation>

  <types>
    <import xmlns="http://www.w3.org/2001/XMLSchema" schemaLocation="servicetypes.xsd"
      namespace="http://example.org/message-test/xsd"/>
  </types>

  <interface name="SimpleEcho">
    <documentation>This minimal interface defines a simplistic echo service, and associated fault.
    This interface is not directly bound, but is extended by another interface.</documentation>
    <fault name="MessageTestSimpleFault" element="xsmt:messageTestSimpleFault">
      <documentation>
        This fault structure is populated with the operation name (local part only)
        when a fault is thrown.</documentation>
    </fault>
    <operation name="EchoString" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation>Simple echo service - pass in a string, get that string back.</documentation>
      <input element="xsmt:echoString"/>
      <output element="xsmt:echoStringReturn"/>
    </operation>
    <operation name="EchoStringFault" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation><![CDATA[
        Operation is given a string, but is intended to fail - 
        MessageTestSimpleFault should be thrown with the messageTestSimpleFault value
          <messageTestSimpleFault>EchoStringFault</messageTestSimpleFault>
      ]]></documentation>
      <input element="xsmt:echoString3"/>
      <output element="xsmt:echoString3Return"/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
  </interface>

  <interface name="ComplexEcho" extends="tns:SimpleEcho">
    <fault name="MessageTestFault" element="xsmt:messageTestFault">
      <documentation>This fault structure is populated with the operation name (local part only)
      and the integer input that caused the fault when a fault is thrown.</documentation>
    </fault>
   <operation name="EchoInt" pattern="http://www.w3.org/ns/wsdl/in-out"
      style="http://www.w3.org/ns/wsdl/style/iri">
      <documentation>This operation returns the same int it is given.  This operation is 
      intended to succeed - no fault should be thrown.</documentation>
      <input element="xsmt:EchoInt"/>
      <output element="xsmt:echoIntReturn"/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault"/>
    </operation>
    <operation name="EchoIntSimpleFault" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation><![CDATA[
        This operation is given an int, but is intended to fail - 
        MessageTestSimpleFault should be thrown with the messageTestSimpleFault value
          <messageTestSimpleFault>EchoIntSimpleFault</messageTestSimpleFault>
      ]]></documentation>
      <input element="xsmt:echoInt2"/>
      <output element="xsmt:echoInt2Return"/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault"/>
    </operation>
    <operation name="EchoIntFault" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation><![CDATA[
        This operation is given an int, but is intended to fail - 
        MessageTestFault should be thrown with the messageTestFault value:
          <messageTestFault>
            <faultNumber>{input int}</faultNumber>
            <faultOperationName>EchoIntFault</faultOperationName>
          </messageTestFault>
      ]]></documentation> 
      <input element="xsmt:echoInt3"/>
      <output element="xsmt:echoInt3Return"/>
      <outfault ref="tns:MessageTestFault"/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
    <operation name="Send" pattern="http://www.w3.org/ns/wsdl/in-only">
      <documentation>Fire and forget any xml structure.</documentation>
      <input element="#any"/>
    </operation>
    <operation name="GuaranteedFault" pattern="http://www.w3.org/ns/wsdl/robust-in-only">
      <documentation><![CDATA[
        This operation is invoked with no SOAP body content.  It is intended to fail - 
        MessageTestSimpleFault should be thrown with the value:
          <messageTestSimpleFault>GuaranteedFault</messageTestSimpleFault>
      ]]></documentation>
      <input element="#none"/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
  </interface>

  <binding name="ComplexEchoSOAPBinding" interface="tns:ComplexEcho"
    type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.2"
    wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/"
    wsoap:mepDefault="http://www.w3.org/2003/05/soap/mep/request-response/">
    <documentation>
      This SOAP 1.2/HTTP binding binds the ComplexEcho service while exercising the 
      following facilities of the SOAP binding:
      - Request-response SOAP MEPs.
      - SOAP fault codes and list of subcodes
      - Unique SOAP Action for each operation
      - Test SOAP module on Binding Faults, Binding Operations, Binding Message References
        (both input and output), Binding Message Fault References, 
      - Test SOAP headers on Binding Faults and Binding Message References
      - SOAP Header mustUnderstand values.
    </documentation>
    <fault ref="tns:MessageTestSimpleFault"
      wsoap:code="soap:Sender"
      wsoap:subcodes="tns:MessageTestSimpleFaultSubcode1 tns:MessageTestSimpleFaultSubcode2"/>
    <fault ref="tns:MessageTestFault" wsoap:code="#any">
      <wsoap:module ref="http://www.w3.org/2002/ws/desc/6/10/test-module"/>
    </fault>
    <operation ref="tns:EchoString"
      wsoap:action="http://example.org/message-test/action/EchoString">
      <wsoap:module ref="http://www.w3.org/2002/ws/desc/6/10/test-module"/>
      <input/>
      <output/>
    </operation>
    <operation ref="tns:EchoStringFault"
      wsoap:action="http://example.org/message-test/action/EchoStringFault">
      <input>
        <wsoap:module ref="http://www.w3.org/2002/ws/desc/6/10/test-module"/>        
      </input>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
    <operation ref="tns:EchoInt"
      wsoap:action="http://example.org/message-test/action/EchoInt">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault"/>
    </operation>
    <operation ref="tns:EchoIntSimpleFault"
      wsoap:action="http://example.org/message-test/action/EchoIntSimpleFault">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault">
        <wsoap:module ref="http://www.w3.org/2002/ws/desc/6/10/test-module"/>        
      </outfault>
      <outfault ref="tns:MessageTestFault">
        <wsoap:module ref="http://www.w3.org/2002/ws/desc/6/10/test-module"/>        
      </outfault>
    </operation>
    <operation ref="tns:EchoIntFault"
      wsoap:action="http://example.org/message-test/action/EchoIntFault">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault"/>
    </operation>
    <operation ref="tns:Send"
      wsoap:action="http://example.org/message-test/action/Send">
      <input/>
    </operation>
    <operation ref="tns:GuaranteedFault"
      wsoap:action="http://example.org/message-test/action/GuaranteedFault">
      <input/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
  </binding>

  <binding name="ComplexEchoSOAPHTTPBinding" interface="tns:ComplexEcho"
    type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.2"
    wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/"
    whttp:cookies="true" whttp:contentEncodingDefault="gzip">
    <documentation>
      This SOAP 1.2/HTTP binding binds the ComplexEcho service while exercising the 
      following facilities of the SOAP binding:
      - {http location}
      - {http headers}
      - {http content encoding default}
      - {http content encoding}
      - {http cookies}
      - {http authentication scheme}
      - {http authentication realm}
    </documentation>
    <fault ref="tns:MessageTestSimpleFault"/>
    <fault ref="tns:MessageTestFault">
      <whttp:header name="X-WSDL-testsuite-fault" type="xs:string"/>
    </fault>
    <operation ref="tns:EchoString"
      wsoap:action="http://example.org/message-test/action/EchoString">
      <input whttp:contentEncoding="">
        <whttp:header name="X-WSDL-testsuite-input" type="xs:string"/>
      </input>
      <output whttp:contentEncoding="">
        <whttp:header name="X-WSDL-testsuite-output" type="xs:string"/>        
      </output>
    </operation>
    <operation ref="tns:EchoStringFault"
      wsoap:action="http://example.org/message-test/action/EchoStringFault"
      whttp:contentEncodingDefault="">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
    <operation ref="tns:EchoInt"
      wsoap:action="http://example.org/message-test/action/EchoInt"
      whttp:location="?op=EchoInt;int={int};">
      <input whttp:contentEncoding=""/>
      <output whttp:contentEncoding=""/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault"/>
    </operation>
    <operation ref="tns:EchoIntSimpleFault"
      wsoap:action="http://example.org/message-test/action/EchoIntSimpleFault"
      whttp:contentEncodingDefault="" whttp:location="?op=EchoIntSimpleFault">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault" />
    </operation>
    <operation ref="tns:EchoIntFault"
      wsoap:action="http://example.org/message-test/action/EchoIntFault"
      whttp:contentEncodingDefault="" whttp:location="?op=EchoIntFault">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleFault"/>
      <outfault ref="tns:MessageTestFault"/>
    </operation>
    <operation ref="tns:Send"
      wsoap:action="http://example.org/message-test/action/Send"
      whttp:contentEncodingDefault="" whttp:location="?op=Send">
      <input/>
    </operation>
    <operation ref="tns:GuaranteedFault"
      wsoap:action="http://example.org/message-test/action/GuaranteedFault"
      whttp:contentEncodingDefault="" whttp:location="?op=GuaranteedFault">
      <input/>
      <outfault ref="tns:MessageTestSimpleFault"/>
    </operation>
  </binding>
  
  <service name="MessageTestService" interface="tns:ComplexEcho">
    <documentation>Exercise each endpoint in order.</documentation>
    <endpoint name="MessageTestSOAP" binding="tns:ComplexEchoSOAPBinding"
      address="http://example.org/MessageTest-1G/endpoint-1"/>
    <endpoint name="MessageTestSOAPHTTP" binding="tns:ComplexEchoSOAPHTTPBinding"
      address="http://example.org/MessageTest-1G/endpoint-2"
      whttp:authenticationScheme="basic"
      whttp:authenticationRealm="example.org Realm"/>
  </service>
</description>
