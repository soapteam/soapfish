<!-- https://dev.w3.org/2002/ws/desc/test-suite/documents/good/MessageTest-5G/SOAPservice.wsdl -->
<!-- Copyright Â© 2007-03-23 05:51 - W3C, (MIT, ERCIM, Keio). All Rights Reserved. http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231 -->
<description xmlns="http://www.w3.org/ns/wsdl"
  targetNamespace="http://example.org/message-test" xmlns:tns="http://example.org/message-test"
  xmlns:wsoap="http://www.w3.org/ns/wsdl/soap"
  xmlns:wsdlx="http://www.w3.org/ns/wsdl-extensions"
  xmlns:whttp="http://www.w3.org/ns/wsdl/http" xmlns:xsmt="http://example.org/message-test/xsd"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://www.w3.org/2003/05/soap-envelope"
  xmlns:tm="http://www.w3.org/2002/ws/desc/6/10/test-module">
  
  <documentation><![CDATA[
    This test checks that modules at different levels are all correctly emitted on messages.
    
    When running a test pass against this WSDL, each endpoint should be invoked in order, and 
    each operation within the interface bound by that binding should be invoked in the order 
    it appears in the interface, extended interfaces first.
  
    This test scenario defines the following extensions, which are necessary to the test framework
    to verify facilities not testable without them.
    - A test SOAP module.  Identified by the URI http://www.w3.org/2002/ws/desc/6/10/test-module, 
      this module simply inserts an empty header in messages where the module is in effect. 
      The header is of the form <TestSOAPHeader xmlns="http://www.w3.org/2002/ws/desc/6/10/test-module"/>.
 ]]></documentation>
  <types>
    <import xmlns="http://www.w3.org/2001/XMLSchema" schemaLocation="TestHeader.xsd"
      namespace="http://www.w3.org/2002/ws/desc/6/10/test-module"/>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://example.org/message-test/xsd"
      xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsmt="http://example.org/message-test/xsd">
      <xs:element name="echoString" type="xs:string"/>
      <xs:element name="echoStringReturn" type="xs:string"/>
      <xs:element name="echoString2" type="xs:string"/>
      <xs:element name="echoString2Return" type="xs:string"/>
      <xs:element name="echoString3" type="xs:string"/>
      <xs:element name="echoString3Return" type="xs:string"/>
      <xs:element name="echoString4" type="xs:string"/>
      <xs:element name="echoString4Return" type="xs:string"/>
      <xs:element name="messageTestSimpleOutFault" type="xs:string"/>
    </xs:schema>
  </types>
  <interface name="SimpleEcho">
    <documentation>This minimal interface defines four operations, to test bindings for input
      messages, output messages, and fault messages.</documentation>
    <fault name="MessageTestSimpleOutFault" element="xsmt:messageTestSimpleOutFault">
      <documentation> This fault structure is populated with the operation name (local part only)
        when a fault is thrown - intended for outfaults.</documentation>
    </fault>
    <operation name="EchoString" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation>Simple echo service - pass in a string, get that string back.</documentation>
      <input element="xsmt:echoString"/>
      <output element="xsmt:echoStringReturn"/>
    </operation>
    <operation name="EchoString2" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation>Simple echo service - pass in a string, get that string back.</documentation>
      <input element="xsmt:echoString2"/>
      <output element="xsmt:echoString2Return"/>
    </operation>
    <operation name="EchoStringOutFault" pattern="http://www.w3.org/ns/wsdl/in-out">
      <documentation><![CDATA[
        Operation is given a string
        MessageTestSimpleOutFault should be thrown with the messageTestSimpleFault value
          <messageTestSimpleOutFault>EchoStringOutFault</messageTestSimpleOutFault>
      ]]></documentation>
      <input element="xsmt:echoString4"/>
      <output element="xsmt:echoString4Return"/>
      <outfault ref="tns:MessageTestSimpleOutFault"/>
    </operation>
  </interface>
 
  <binding name="SimpleEchoSOAPBindingMU" interface="tns:SimpleEcho"
    type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.2"
    wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/">
    <documentation> This binding tests the composition of soap modules specified at various levels. </documentation>
    <fault ref="tns:MessageTestSimpleOutFault">
      <wsoap:header element="tm:TestSOAPHeader" required="true" mustUnderstand="true"/>
    </fault>
    <operation ref="tns:EchoString" wsoap:action="http://example.org/message-test/action/EchoString">
      <input>
        <wsoap:header element="tm:TestSOAPHeader" required="true" mustUnderstand="true"/>
      </input>
      <output/>
    </operation>
    <operation ref="tns:EchoString2"
      wsoap:action="http://example.org/message-test/action/EchoString2">
      <input/>
      <output>
        <wsoap:header element="tm:TestSOAPHeader" required="true" mustUnderstand="true"/>
      </output>
    </operation>
    <operation ref="tns:EchoStringOutFault"
      wsoap:action="http://example.org/message-test/action/EchoStringOutFault">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleOutFault">
        <wsoap:header element="tm:TestSOAPHeader" required="true" mustUnderstand="true"/>
      </outfault>
    </operation>
  </binding>

  <binding name="SimpleEchoSOAPBinding" interface="tns:SimpleEcho"
    type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.2"
    wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/">
    <documentation> This binding tests the composition of soap modules specified at various levels. </documentation>
    <fault ref="tns:MessageTestSimpleOutFault">
      <wsoap:header element="tm:TestSOAPHeader" required="true"/>
    </fault>
    <operation ref="tns:EchoString" wsoap:action="http://example.org/message-test/action/EchoString">
      <input>
        <wsoap:header element="tm:TestSOAPHeader" required="true" mustUnderstand="false"/>
      </input>
      <output/>
    </operation>
    <operation ref="tns:EchoString2"
      wsoap:action="http://example.org/message-test/action/EchoString2">
      <input/>
      <output>
        <wsoap:header element="tm:TestSOAPHeader" required="true"/>
      </output>
    </operation>
    <operation ref="tns:EchoStringOutFault"
      wsoap:action="http://example.org/message-test/action/EchoStringOutFault">
      <input/>
      <output/>
      <outfault ref="tns:MessageTestSimpleOutFault">
        <wsoap:header element="tm:TestSOAPHeader" required="true"/>
      </outfault>
    </operation>
  </binding>
  
  <service name="SOAPHeaderService" interface="tns:SimpleEcho">
    <documentation>Exercise each endpoint in order.</documentation>
    <endpoint name="SOAPHeaderMustUnderstand" binding="tns:SimpleEchoSOAPBindingMU"
      address="http://example.org/MessageTest-5G/endpoint-1"/>
    <endpoint name="SOAPHeader" binding="tns:SimpleEchoSOAPBinding"
      address="http://example.org/MessageTest-5G/endpoint-2"/>
  </service>
</description>
